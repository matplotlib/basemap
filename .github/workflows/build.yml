name: Build and Test
on:
  push:
    branches: [main, master, develop]
    tags: ["v*"]
    paths:
      - ".github/workflows/**"
      - "packages/basemap/**"
  pull_request:
    branches: [main, master, develop]
    paths:
      - ".github/workflows/**"
      - "packages/basemap/**"
  workflow_dispatch: # Allows manual workflow runs
env:
  PKGDIR: "packages/basemap"
  CIBW_BUILD_VERBOSITY: 1
  PYTHONUNBUFFERED: "1"
  PYTHONWARNINGS: "ignore:DEPRECATION"
  GEOS_VERSION: "3.6.5"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        env:
          CIBW_SKIP: "pp* *-musllinux*"
          CIBW_BEFORE_BUILD: >
            pip install --upgrade pip
            pip install numpy cython
            python -c "import utils; utils.GeosLibrary('3.6.5').build('extern', njobs=16)"
          CIBW_ENVIRONMENT_WINDOWS: >
            GEOS_DIR=${{ env.GEOS_DIR }}
            SETUPTOOLS_USE_DISTUTILS=stdlib
          CIBW_ENVIRONMENT_LINUX: >
            GEOS_DIR={project}/extern
            SETUPTOOLS_USE_DISTUTILS=stdlib
          CIBW_ENVIRONMENT_MACOS: >
            GEOS_DIR={project}/extern
            SETUPTOOLS_USE_DISTUTILS=stdlib
          CIBW_TEST_COMMAND: >
            cd {project} && python -m pytest --cov="mpl_toolkits.basemap"
            --cov-report=term --ignore=dist --ignore=build
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-*"
        run: |
          cd ${{ env.PKGDIR }}
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ${{ env.PKGDIR }}/wheelhouse/*.whl
