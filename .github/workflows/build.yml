name: Build and Test

env:
  PKGDIR: "packages/basemap"
  CIBW_BUILD_VERBOSITY: 1
  PYTHONUNBUFFERED: "1"
  PYTHONWARNINGS: "ignore:DEPRECATION"

on:
  push:
    paths:
      - ".github/workflows/**"
      - "packages/basemap/**"
      - "packages/basemap_data/**"
      - "packages/basemap_data_hires/**"
  pull_request:
    paths:
      - ".github/workflows/**"
      - "packages/basemap/**"
      - "packages/basemap_data/**"
      - "packages/basemap_data_hires/**"
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        env:
          CIBW_SKIP: "pp* *-musllinux*" # Skip PyPy and musllinux
          CIBW_BEFORE_BUILD: >
            pip install numpy cython &&
            python -c "import utils; utils.GeosLibrary('3.6.5').build('extern', njobs=16)"
          CIBW_BEFORE_TEST: "pip install -r {project}/requirements-test.txt"
          CIBW_TEST_COMMAND: >
            cd {project} && python -m pytest --cov="mpl_toolkits.basemap"
            --cov-report=term --ignore=dist --ignore=build
          CIBW_BUILD: "cp27-* cp35-* cp36-* cp37-* cp38-* cp39-* cp310-* cp311-* cp312-*"
          CIBW_ENVIRONMENT: "GEOS_DIR={project}/extern"
        run: |
          cd ${{ env.PKGDIR }}
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ${{ env.PKGDIR }}/wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Build sdist
        run: |
          cd ${{ env.PKGDIR }}
          pip install build
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ${{ env.PKGDIR }}/dist/*.tar.gz

  upload_testpypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment:
      name: TestPyPI
      url: https://test.pypi.org/p/basemap
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: Upload to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [build_wheels, build_sdist, upload_testpypi]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment:
      name: PyPI
      url: https://pypi.org/p/basemap
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
