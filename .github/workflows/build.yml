name: Build and Test

env:
  PKGDIR: "packages/basemap"
  CIBW_BUILD_VERBOSITY: 1
  PYTHONUNBUFFERED: "1"
  PYTHONWARNINGS: "ignore:DEPRECATION"
  GEOS_VERSION: "3.6.5"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v4

      - name: Install GEOS (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository ppa:ubuntugis/ppa
          sudo apt-get update
          sudo apt-get install -y libgeos-dev

      - name: Install GEOS (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          wget https://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2
          tar xjf geos-${GEOS_VERSION}.tar.bz2
          cd geos-${GEOS_VERSION}
          mkdir build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/geos-install ..
          cmake --build . --config Release --target install
          echo "GEOS_DIR=$GITHUB_WORKSPACE/geos-install" >> $GITHUB_ENV

      - name: Install GEOS (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install geos

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        env:
          CIBW_SKIP: "pp* *-musllinux*"
          CIBW_BEFORE_BUILD: >
            pip install --upgrade pip &&
            pip install numpy>=1.21.4 cython>=0.29.21
          CIBW_ENVIRONMENT_WINDOWS: >
            GEOS_DIR=${{ env.GEOS_DIR }}
            SETUPTOOLS_USE_DISTUTILS=stdlib
          CIBW_ENVIRONMENT_LINUX: >
            GEOS_DIR={project}/extern
            SETUPTOOLS_USE_DISTUTILS=stdlib
          CIBW_ENVIRONMENT_MACOS: >
            GEOS_DIR={project}/extern
            SETUPTOOLS_USE_DISTUTILS=stdlib
          CIBW_TEST_COMMAND: >
            cd {project} && python -m pytest --cov="mpl_toolkits.basemap"
            --cov-report=term --ignore=dist --ignore=build
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-*"
        run: |
          cd ${{ env.PKGDIR }}
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ${{ env.PKGDIR }}/wheelhouse/*.whl
